# import the JSON utility package
import json
# import the Python math library
import math

# import the AWS SDK (for Python the package name is boto3)
import boto3
# import two packages to help us with dates and date formatting
from time import gmtime, strftime

# create a DynamoDB object using the AWS SDK
dynamodb = boto3.resource('dynamodb')
# use the DynamoDB object to select our table
table = dynamodb.Table('temp_cnvrtr')
# store the current time in a human readable format in a variable
now = strftime("%a, %d %b %Y %H:%M:%S +0000", gmtime())

# define the handler function that the Lambda service will use an entry point
def lambda_handler(event, context):
    val=int(event["value"])
    if event['input_scale'] == 'Celcius':
        if event['output_scale'] == 'Fahrenheit':
            Result= val * 1.8 + 32
        elif event['output_scale'] == 'Kelvin':
            Result= val + 273.15
        else:
            Result= val
    elif event['input_scale'] == 'Fahrenheit':
        if event['output_scale'] == 'Celsius':
            Result= (val - 32) / 1.8
        elif event['output_scale'] == 'Kelvin':
            Result= (val + 459.67) * 5 / 9
        else:
            Result= val
    elif event['input_scale'] == 'Kelvin':
        if event['output_scale'] == 'Celsius':
            Result= val - 273.15
        elif event['output_scale'] == 'Fahrenheit':
            Result= val * 9 / 5 - 459.67
        else:
            Result= val
    else:
        Result="select a value"
   
    # Convert the temperature and print the result
    return Result
    # write result and time to the DynamoDB table using the object we instantiated and save response in a variable
    response = table.put_item(
        Item={
            'ID': str(Result),
            'LatestGreetingTime':now
            })

    # return a properly formatted JSON object
    return {
    'statusCode': 200,
    'body': json.dumps(str(Result))
    }